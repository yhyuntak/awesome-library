plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'maven-publish'
    id 'signing'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Awesome Library'
                description = 'A powerful and awesome library for Java and Spring applications.'
                url = 'https://github.com/yhyuntak/awesome-library'

                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'yourid'
                        name = 'Your Name'
                        email = 'youremail@example.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/yourusername/awesome-library.git'
                    developerConnection = 'scm:git:ssh://github.com:yourusername/awesome-library.git'
                    url = 'https://github.com/yourusername/awesome-library'
                }
            }
        }
    }

    repositories {
        maven {
            name = 'OSSRH'
            url = uri('https://oss.sonatype.org/service/local/staging/deploy/maven2/')
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}

// GPG 서명 설정
signing {
    sign publishing.publications.mavenJava
}
